
import { Request , Response } from 'express';
import { pool } from '../connections/postgresql';
import { QueryResult } from 'pg';
import { Expediente } from './../models/expediente' 

class LitigioController {

   
    public async get (req: Request, res: Response): Promise<Response> {
        try {
            const response: QueryResult = await pool.query(`SELECT * FROM "M4SLL_LITIGIOS"`);
            if (response.rowCount > 0) {
                return res.status(200).json(response.rows)
            } else {
                return res.status(404).json({text: "No registered Litigios"})
            }
           
        } catch (error) {
            console.log(error)
            return res.status(500).json("Internal Server Error")
        }
    }

    
    public async getOne (req: Request, res: Response): Promise<Response>{
        try {
            const id = req.params.id
            const response: QueryResult = await pool.query(`SELECT * FROM "M4SLL_LITIGIOS" WHERE "LIT_ID_LITIGIO" = $1`, [id]);
            if (response.rowCount > 0) {
                return res.status(200).json(response.rows)
            } else {
                return res.status(404).json({text: `The Litigio ${id} doesn't exist`})
            }

        } catch (error) {
            console.log(error)
            return res.status(500).json("Internal Server Error")
        }
    }

    public post = async(req: Request, res: Response): Promise<Response> => {
        try {

            const {ID_ORGANIZATION,LIT_ID_LITIGIO,MCA_ID_CODIGO_ALTERNO,MRI_ID_RIESGO,MMA_ID_MATERIA,NEG_ID_NEGOCIO,EJS_ID_EST_JUR_SUB,TPL_ID_TP_LITIGIO,LIT_NRO_PROCESO,LIT_DESCRIPCION,LIT_BPO,LIT_FECHA_INICIO,LIT_FECHA_NOTIFICACION,LIT_USR_REGISTRA,LIT_FECHA_PRESENTACION,LIT_HORA_PRESENTACION,LIT_FECHA_CIERRE,LIT_ACUERDO,LIT_RELEVANTE,LIT_HON_CONTADOR,LIT_HON_JURIDICO,LIT_OBSERVACIONES,TRI_ID_TRIBUNAL,TRE_ID_RECURRENCIA,EJU_ID_EST_JURIDICO,TFA_ID_TP_FASE,TST_ID_TP_STATUS,TSD_ID_TP_STA_DET,TMO_ID_TP_MOTIVO,STD_ID_COUNTRY,STD_ID_GEO_DIV,STD_ID_SUB_GEO_DIV,LIT_ABOGADO_RESPONSABLE,LIT_VALOR_TOTAL,LIT_CK_AVAL,LIT_CK_MINUTA,STD_ID_GEO_PLACE,TRC_ID_TP_RECLAMO,TFL_ID_TP_FALTA,LIT_ID_LEGADO,LIT_JUEZ,LIT_PAZ_Y_SVC,EDE_ID_DELEGACION,ECI_ID_CIUDAD,STD_ID_LEG_ENT,LIT_DT_ACTUALIZACION,LIT_USER_ACTUALIZACION,LIT_CENTRO_COSTO,LIT_DIVISION,LIT_REGION,LIT_NUMERO_EJECUCION,LIT_VALOR_PED_TOTAL,MAB_SECUENCIA,LIT_UBICACION_FISICA,LIT_SECUENCIA,LIT_CORPORATIVO_S_N,LIT_SUBROGADO_S_N,LIT_PORCENTAJE_PROBABILIDAD,LIT_SUSTENTACION,LIT_FLEX_CONDENA,LIT_FLEX_HONORARIOS,LIT_PREVISION,LIT_PROVISION,LIT_IMPORTE_TRANSF,LIT_DESCUENTOS_S_S_TOTAL,LIT_IMPORTE_BRUTO_TOTAL,LIT_RETENCION_JUDICIAL_TOTAL,LIT_DESCUENTOS_IRPF_TOTAL,ID_APPROLE,ID_SECUSER,DT_LAST_UPDATE} = req.body;
    
            const response: QueryResult = await pool.query(`INSERT INTO "public"."M4SLL_LITIGIOS" ("ID_ORGANIZATION","LIT_ID_LITIGIO","MCA_ID_CODIGO_ALTERNO","MRI_ID_RIESGO","MMA_ID_MATERIA","NEG_ID_NEGOCIO","EJS_ID_EST_JUR_SUB","TPL_ID_TP_LITIGIO","LIT_NRO_PROCESO","LIT_DESCRIPCION","LIT_BPO","LIT_FECHA_INICIO","LIT_FECHA_NOTIFICACION","LIT_USR_REGISTRA","LIT_FECHA_PRESENTACION","LIT_HORA_PRESENTACION","LIT_FECHA_CIERRE","LIT_ACUERDO","LIT_RELEVANTE","LIT_HON_CONTADOR","LIT_HON_JURIDICO","LIT_OBSERVACIONES","TRI_ID_TRIBUNAL","TRE_ID_RECURRENCIA","EJU_ID_EST_JURIDICO","TFA_ID_TP_FASE","TST_ID_TP_STATUS","TSD_ID_TP_STA_DET","TMO_ID_TP_MOTIVO","STD_ID_COUNTRY","STD_ID_GEO_DIV","STD_ID_SUB_GEO_DIV","LIT_ABOGADO_RESPONSABLE","LIT_VALOR_TOTAL","LIT_CK_AVAL","LIT_CK_MINUTA","STD_ID_GEO_PLACE","TRC_ID_TP_RECLAMO","TFL_ID_TP_FALTA","LIT_ID_LEGADO","LIT_JUEZ","LIT_PAZ_Y_SVC","EDE_ID_DELEGACION","ECI_ID_CIUDAD","STD_ID_LEG_ENT","LIT_DT_ACTUALIZACION","LIT_USER_ACTUALIZACION","LIT_CENTRO_COSTO","LIT_DIVISION","LIT_REGION","LIT_NUMERO_EJECUCION","LIT_VALOR_PED_TOTAL","MAB_SECUENCIA","LIT_UBICACION_FISICA","LIT_SECUENCIA","LIT_CORPORATIVO_S_N","LIT_SUBROGADO_S_N","LIT_PORCENTAJE_PROBABILIDAD","LIT_SUSTENTACION","LIT_FLEX_CONDENA","LIT_FLEX_HONORARIOS","LIT_PREVISION","LIT_PROVISION","LIT_IMPORTE_TRANSF","LIT_DESCUENTOS_S_S_TOTAL","LIT_IMPORTE_BRUTO_TOTAL","LIT_RETENCION_JUDICIAL_TOTAL","LIT_DESCUENTOS_IRPF_TOTAL","ID_APPROLE","ID_SECUSER","DT_LAST_UPDATE") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$63,$64,$65,$66,$67,$68,$69,$70,$71 )`, 

            [ID_ORGANIZATION,LIT_ID_LITIGIO,MCA_ID_CODIGO_ALTERNO,MRI_ID_RIESGO,MMA_ID_MATERIA,NEG_ID_NEGOCIO,EJS_ID_EST_JUR_SUB,TPL_ID_TP_LITIGIO,LIT_NRO_PROCESO,LIT_DESCRIPCION,LIT_BPO,LIT_FECHA_INICIO,LIT_FECHA_NOTIFICACION,LIT_USR_REGISTRA,LIT_FECHA_PRESENTACION,LIT_HORA_PRESENTACION,LIT_FECHA_CIERRE,LIT_ACUERDO,LIT_RELEVANTE,LIT_HON_CONTADOR,LIT_HON_JURIDICO,LIT_OBSERVACIONES,TRI_ID_TRIBUNAL,TRE_ID_RECURRENCIA,EJU_ID_EST_JURIDICO,TFA_ID_TP_FASE,TST_ID_TP_STATUS,TSD_ID_TP_STA_DET,TMO_ID_TP_MOTIVO,STD_ID_COUNTRY,STD_ID_GEO_DIV,STD_ID_SUB_GEO_DIV,LIT_ABOGADO_RESPONSABLE,LIT_VALOR_TOTAL,LIT_CK_AVAL,LIT_CK_MINUTA,STD_ID_GEO_PLACE,TRC_ID_TP_RECLAMO,TFL_ID_TP_FALTA,LIT_ID_LEGADO,LIT_JUEZ,LIT_PAZ_Y_SVC,EDE_ID_DELEGACION,ECI_ID_CIUDAD,STD_ID_LEG_ENT,LIT_DT_ACTUALIZACION,LIT_USER_ACTUALIZACION,LIT_CENTRO_COSTO,LIT_DIVISION,LIT_REGION,LIT_NUMERO_EJECUCION,LIT_VALOR_PED_TOTAL,MAB_SECUENCIA,LIT_UBICACION_FISICA,LIT_SECUENCIA,LIT_CORPORATIVO_S_N,LIT_SUBROGADO_S_N,LIT_PORCENTAJE_PROBABILIDAD,LIT_SUSTENTACION,LIT_FLEX_CONDENA,LIT_FLEX_HONORARIOS,LIT_PREVISION,LIT_PROVISION,LIT_IMPORTE_TRANSF,LIT_DESCUENTOS_S_S_TOTAL,LIT_IMPORTE_BRUTO_TOTAL,LIT_RETENCION_JUDICIAL_TOTAL,LIT_DESCUENTOS_IRPF_TOTAL,ID_APPROLE,ID_SECUSER,DT_LAST_UPDATE]);

            return res.json({
                message: 'Litigio was created ', 
                body: {
                    M4SLL_LITIGIOS: {
                        ID_ORGANIZATION,LIT_ID_LITIGIO,MCA_ID_CODIGO_ALTERNO,MRI_ID_RIESGO,MMA_ID_MATERIA,NEG_ID_NEGOCIO,EJS_ID_EST_JUR_SUB,TPL_ID_TP_LITIGIO,LIT_NRO_PROCESO,LIT_DESCRIPCION,LIT_BPO,LIT_FECHA_INICIO,LIT_FECHA_NOTIFICACION,LIT_USR_REGISTRA,LIT_FECHA_PRESENTACION,LIT_HORA_PRESENTACION,LIT_FECHA_CIERRE,LIT_ACUERDO,LIT_RELEVANTE,LIT_HON_CONTADOR,LIT_HON_JURIDICO,LIT_OBSERVACIONES,TRI_ID_TRIBUNAL,TRE_ID_RECURRENCIA,EJU_ID_EST_JURIDICO,TFA_ID_TP_FASE,TST_ID_TP_STATUS,TSD_ID_TP_STA_DET,TMO_ID_TP_MOTIVO,STD_ID_COUNTRY,STD_ID_GEO_DIV,STD_ID_SUB_GEO_DIV,LIT_ABOGADO_RESPONSABLE,LIT_VALOR_TOTAL,LIT_CK_AVAL,LIT_CK_MINUTA,STD_ID_GEO_PLACE,TRC_ID_TP_RECLAMO,TFL_ID_TP_FALTA,LIT_ID_LEGADO,LIT_JUEZ,LIT_PAZ_Y_SVC,EDE_ID_DELEGACION,ECI_ID_CIUDAD,STD_ID_LEG_ENT,LIT_DT_ACTUALIZACION,LIT_USER_ACTUALIZACION,LIT_CENTRO_COSTO,LIT_DIVISION,LIT_REGION,LIT_NUMERO_EJECUCION,LIT_VALOR_PED_TOTAL,MAB_SECUENCIA,LIT_UBICACION_FISICA,LIT_SECUENCIA,LIT_CORPORATIVO_S_N,LIT_SUBROGADO_S_N,LIT_PORCENTAJE_PROBABILIDAD,LIT_SUSTENTACION,LIT_FLEX_CONDENA,LIT_FLEX_HONORARIOS,LIT_PREVISION,LIT_PROVISION,LIT_IMPORTE_TRANSF,LIT_DESCUENTOS_S_S_TOTAL,LIT_IMPORTE_BRUTO_TOTAL,LIT_RETENCION_JUDICIAL_TOTAL,LIT_DESCUENTOS_IRPF_TOTAL,ID_APPROLE,ID_SECUSER,DT_LAST_UPDATE
                    }
                }
            })
        } catch (error) {
            console.log(error)
            return (error.code == '23505') ?   
                res.status(500).json({Error: `The litigio ${ req.body.LIT_ID_LITIGIO } allready exists`}) : 
                res.status(500).json("Internal Server Error")
        }
    }
    
    
    public delete = async(req: Request, res: Response): Promise<Response> => {
    
        try {
            const id = parseInt(req.params.id);
            const response: QueryResult = await pool.query('DELETE FROM "M4SLL_LITIGIOS" WHERE "LIT_ID_LITIGIO" = $1', [id]);
            return res.status(200).json(`Litigio ${id} deleted successfully`)
           
        } catch (error) {
            console.log(error)
            return res.status(500).json("Internal Server Error")
        }
    }


    public put = async(req: Request, res: Response): Promise<Response> => {
        const id = req.params.id
        try {
           
            const {ID_ORGANIZATION,LIT_ID_LITIGIO,MCA_ID_CODIGO_ALTERNO,MRI_ID_RIESGO,MMA_ID_MATERIA,NEG_ID_NEGOCIO,EJS_ID_EST_JUR_SUB,TPL_ID_TP_LITIGIO,LIT_NRO_PROCESO,LIT_DESCRIPCION,LIT_BPO,LIT_FECHA_INICIO,LIT_FECHA_NOTIFICACION,LIT_USR_REGISTRA,LIT_FECHA_PRESENTACION,LIT_HORA_PRESENTACION,LIT_FECHA_CIERRE,LIT_ACUERDO,LIT_RELEVANTE,LIT_HON_CONTADOR,LIT_HON_JURIDICO,LIT_OBSERVACIONES,TRI_ID_TRIBUNAL,TRE_ID_RECURRENCIA,EJU_ID_EST_JURIDICO,TFA_ID_TP_FASE,TST_ID_TP_STATUS,TSD_ID_TP_STA_DET,TMO_ID_TP_MOTIVO,STD_ID_COUNTRY,STD_ID_GEO_DIV,STD_ID_SUB_GEO_DIV,LIT_ABOGADO_RESPONSABLE,LIT_VALOR_TOTAL,LIT_CK_AVAL,LIT_CK_MINUTA,STD_ID_GEO_PLACE,TRC_ID_TP_RECLAMO,TFL_ID_TP_FALTA,LIT_ID_LEGADO,LIT_JUEZ,LIT_PAZ_Y_SVC,EDE_ID_DELEGACION,ECI_ID_CIUDAD,STD_ID_LEG_ENT,LIT_DT_ACTUALIZACION,LIT_USER_ACTUALIZACION,LIT_CENTRO_COSTO,LIT_DIVISION,LIT_REGION,LIT_NUMERO_EJECUCION,LIT_VALOR_PED_TOTAL,MAB_SECUENCIA,LIT_UBICACION_FISICA,LIT_SECUENCIA,LIT_CORPORATIVO_S_N,LIT_SUBROGADO_S_N,LIT_PORCENTAJE_PROBABILIDAD,LIT_SUSTENTACION,LIT_FLEX_CONDENA,LIT_FLEX_HONORARIOS,LIT_PREVISION,LIT_PROVISION,LIT_IMPORTE_TRANSF,LIT_DESCUENTOS_S_S_TOTAL,LIT_IMPORTE_BRUTO_TOTAL,LIT_RETENCION_JUDICIAL_TOTAL,LIT_DESCUENTOS_IRPF_TOTAL,ID_APPROLE,ID_SECUSER,DT_LAST_UPDATE} = req.body;
    

            let sql = `UPDATE "public"."M4SLL_LITIGIOS" SET "MCA_ID_CODIGO_ALTERNO" = $3, "MRI_ID_RIESGO" = $4, "MMA_ID_MATERIA" = $5, "NEG_ID_NEGOCIO" = $6, "EJS_ID_EST_JUR_SUB" = $7, "TPL_ID_TP_LITIGIO" = $8, "LIT_NRO_PROCESO" = $9, "LIT_DESCRIPCION" = $10, "LIT_BPO" = $11, "LIT_FECHA_INICIO" = $12, "LIT_FECHA_NOTIFICACION" = $13, "LIT_USR_REGISTRA" = $14, "LIT_FECHA_PRESENTACION" = $15, "LIT_HORA_PRESENTACION" = $16, "LIT_FECHA_CIERRE" = $17, "LIT_ACUERDO" = $18, "LIT_RELEVANTE" = $19, "LIT_HON_CONTADOR" = $20, "LIT_HON_JURIDICO" = $21, "LIT_OBSERVACIONES" = $22, "TRI_ID_TRIBUNAL" = $23, "TRE_ID_RECURRENCIA" = $24, "EJU_ID_EST_JURIDICO" = $25, "TFA_ID_TP_FASE" = $26, "TST_ID_TP_STATUS" = $27, "TSD_ID_TP_STA_DET" = $28, "TMO_ID_TP_MOTIVO" = $29, "STD_ID_COUNTRY" = $30, "STD_ID_GEO_DIV" = $31, "STD_ID_SUB_GEO_DIV" = $32, "LIT_ABOGADO_RESPONSABLE" = $33, "LIT_VALOR_TOTAL" = $34, "LIT_CK_AVAL" = $35, "LIT_CK_MINUTA" = $36, "STD_ID_GEO_PLACE" = $37, "TRC_ID_TP_RECLAMO" = $38, "TFL_ID_TP_FALTA" = $39, "LIT_ID_LEGADO" = $40, "LIT_JUEZ" = $41, "LIT_PAZ_Y_SVC" = $42, "EDE_ID_DELEGACION" = $43, "ECI_ID_CIUDAD" = $44, "STD_ID_LEG_ENT" = $45, "LIT_DT_ACTUALIZACION" = $46, "LIT_USER_ACTUALIZACION" = $47, "LIT_CENTRO_COSTO" = $48, "LIT_DIVISION" = $49, "LIT_REGION" = $50, "LIT_NUMERO_EJECUCION" = $51, "LIT_VALOR_PED_TOTAL" = $52, "MAB_SECUENCIA" = $53, "LIT_UBICACION_FISICA" = $54, "LIT_SECUENCIA" = $55, "LIT_CORPORATIVO_S_N" = $56, "LIT_SUBROGADO_S_N" = $57, "LIT_PORCENTAJE_PROBABILIDAD" = $58, "LIT_SUSTENTACION" = $59, "LIT_FLEX_CONDENA" = $60, "LIT_FLEX_HONORARIOS" = $61, "LIT_PREVISION" = $62, "LIT_PROVISION" = $63, "LIT_IMPORTE_TRANSF" = $64, "LIT_DESCUENTOS_S_S_TOTAL" = $65, "LIT_IMPORTE_BRUTO_TOTAL" = $66, "LIT_RETENCION_JUDICIAL_TOTAL" = $67, "LIT_DESCUENTOS_IRPF_TOTAL" = $68, "ID_APPROLE" = $69, "ID_SECUSER" = $70, "DT_LAST_UPDATE" = $71 
            WHERE "ID_ORGANIZATION" = $1 AND "LIT_ID_LITIGIO" = $2`

            console.log(sql);

            const response: QueryResult = await pool.query( sql , 
            [ID_ORGANIZATION,LIT_ID_LITIGIO,MCA_ID_CODIGO_ALTERNO,MRI_ID_RIESGO,MMA_ID_MATERIA,NEG_ID_NEGOCIO,EJS_ID_EST_JUR_SUB,TPL_ID_TP_LITIGIO,LIT_NRO_PROCESO,LIT_DESCRIPCION,LIT_BPO,LIT_FECHA_INICIO,LIT_FECHA_NOTIFICACION,LIT_USR_REGISTRA,LIT_FECHA_PRESENTACION,LIT_HORA_PRESENTACION,LIT_FECHA_CIERRE,LIT_ACUERDO,LIT_RELEVANTE,LIT_HON_CONTADOR,LIT_HON_JURIDICO,LIT_OBSERVACIONES,TRI_ID_TRIBUNAL,TRE_ID_RECURRENCIA,EJU_ID_EST_JURIDICO,TFA_ID_TP_FASE,TST_ID_TP_STATUS,TSD_ID_TP_STA_DET,TMO_ID_TP_MOTIVO,STD_ID_COUNTRY,STD_ID_GEO_DIV,STD_ID_SUB_GEO_DIV,LIT_ABOGADO_RESPONSABLE,LIT_VALOR_TOTAL,LIT_CK_AVAL,LIT_CK_MINUTA,STD_ID_GEO_PLACE,TRC_ID_TP_RECLAMO,TFL_ID_TP_FALTA,LIT_ID_LEGADO,LIT_JUEZ,LIT_PAZ_Y_SVC,EDE_ID_DELEGACION,ECI_ID_CIUDAD,STD_ID_LEG_ENT,LIT_DT_ACTUALIZACION,LIT_USER_ACTUALIZACION,LIT_CENTRO_COSTO,LIT_DIVISION,LIT_REGION,LIT_NUMERO_EJECUCION,LIT_VALOR_PED_TOTAL,MAB_SECUENCIA,LIT_UBICACION_FISICA,LIT_SECUENCIA,LIT_CORPORATIVO_S_N,LIT_SUBROGADO_S_N,LIT_PORCENTAJE_PROBABILIDAD,LIT_SUSTENTACION,LIT_FLEX_CONDENA,LIT_FLEX_HONORARIOS,LIT_PREVISION,LIT_PROVISION,LIT_IMPORTE_TRANSF,LIT_DESCUENTOS_S_S_TOTAL,LIT_IMPORTE_BRUTO_TOTAL,LIT_RETENCION_JUDICIAL_TOTAL,LIT_DESCUENTOS_IRPF_TOTAL,ID_APPROLE,ID_SECUSER,DT_LAST_UPDATE]);

            return res.status(200).json(`Litigio ${LIT_ID_LITIGIO} updated successfully`)
           
        } catch (error) {
            console.log(error)
            return res.status(500).json("Internal Server Error")
        }
    }
    

}

export const litigioController = new LitigioController();


